/* Parallelism.h
 * 
 * Author           : Alexander J. Yee
 * Date Created     : 05/31/2015
 * Last Modified    : 09/07/2015
 * 
 */

#pragma once
#ifndef _ymp_Parallelism_H
#define _ymp_Parallelism_H
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//  Dependencies
#include <memory>
#include "PublicLibs/CompilerSettings.h"
#include "PublicLibs/Types.h"
#include "PrivateLibs/Threads/Action.h"
#include "PrivateLibs/Threads/TaskParallelizer.h"
namespace ymp{
namespace Threads{
    class ParallelFramework;
extern "C" {
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
YMP_EXPORT ParallelFramework* GetParallelFramework();
YMP_EXPORT void SetParallelFramework(ParallelFramework* framework);
YMP_EXPORT const char* GetFrameworkName(const ParallelFramework* framework);
YMP_EXPORT void PrintFrameworkDetails(const ParallelFramework* framework, upL_t tds);
YMP_EXPORT ParallelFramework* GetBuiltInFrameworkByName(const char* name);
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
inline bool SetFrameworkByName(const char* name){
    ParallelFramework* framework = GetBuiltInFrameworkByName(name);
    if (framework == nullptr){
        return false;
    }
    SetParallelFramework(framework);
    return true;
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
}
}
#endif
