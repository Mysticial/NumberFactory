/* Environment_WindowsVista.ipp
 * 
 * Author           : Alexander J. Yee
 * Date Created     : 01/04/2015
 * Last Modified    : 08/27/2016
 * 
 */

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//  Dependencies
#include <vector>
#include <Windows.h>
#include "PublicLibs/ConsoleIO/BasicIO.h"
#include "PublicLibs/ConsoleIO/Label.h"
#include "Environment.h"
namespace ymp{
namespace Environment{
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
upL_t GetLogicalProcessors(){
    SYSTEM_INFO info;
    GetSystemInfo(&info);
    return (upL_t)info.dwNumberOfProcessors;
}
upL_t GetFreePhysicalMemory(){
    uiL_t bytes;

    MEMORYSTATUSEX data;
    data.dwLength = sizeof(data);
    if (GlobalMemoryStatusEx(&data)){
        bytes = (uiL_t)data.ullAvailPhys;
    }else{
        bytes = 0;
    }

    if (bytes > MAX_MEMORY){
        bytes = MAX_MEMORY;
    }
    return static_cast<upL_t>(bytes);
}
uiL_t GetTotalPhysicalMemory(){
    MEMORYSTATUSEX data;
    data.dwLength = sizeof(data);
    if (GlobalMemoryStatusEx(&data)){
        return (uiL_t)data.ullTotalPhys;
    }else{
        return 0;
    }
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
u64_t x86_rdtsc(){
    return __rdtsc();
}
void x86_cpuid(u32_t eabcdx[4], u32_t eax, u32_t ecx){
    int out[4];
    __cpuidex(out, eax, ecx);
    eabcdx[0] = out[0];
    eabcdx[1] = out[1];
    eabcdx[2] = out[2];
    eabcdx[3] = out[3];
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
}
}
