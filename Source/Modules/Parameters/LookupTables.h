/* LookupTables.h
 * 
 * Author           : Alexander J. Yee
 * Date Created     : 06/24/2015
 * Last Modified    : 06/24/2015
 * 
 */

#pragma once
#ifndef _ymp_LookupTables_H
#define _ymp_LookupTables_H
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//  Dependencies
#include <type_traits>
#include "PublicLibs/CompilerSettings.h"
#include "PublicLibs/Types.h"
#include "PublicLibs/TemplateTools.h"
#include "PublicLibs/ExportSafeLibs.h"
namespace ymp{
    class LookupTable;
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
extern "C" {
    YMP_EXPORT const LookupTable* get_global_table();
    YMP_EXPORT uiL_t get_global_table_size();
    YMP_EXPORT ExceptionWrapper* internal_ensure_global_table(uiL_t cbitlen);
    YMP_EXPORT ExceptionWrapper* internal_make_table(dll_uptr<LookupTable>& table, uiL_t cbitlen);
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
inline void ensure_global_table_bits(uiL_t cbitlen = (uiL_t)0 - 1){
    YMP_EXPAND_EXCEPTION(internal_ensure_global_table(cbitlen));
}
template <typename wtype>
void ensure_global_table(uiL_t cwordlen = (uiL_t)0 - 1){
    if (cwordlen == (uiL_t)0 - 1){
        ensure_global_table_bits(cwordlen);
    }else{
        ensure_global_table_bits(cwordlen * WordTraits<wtype>::BITS);
    }
}
////////////////////////////////////////////////////////////////////////////////
inline dll_uptr<LookupTable> MakeLookupTable(uiL_t cbitlen = (uiL_t)0 - 1){
    dll_uptr<LookupTable> table;
    YMP_EXPAND_EXCEPTION(internal_make_table(table, cbitlen));
    return table;
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
}
#endif
