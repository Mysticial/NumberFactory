/* ToString.h - Conversions to Strings
 * 
 * Author           : Alexander J. Yee
 * Date Created     : 07/07/2013
 * Last Modified    : 08/24/2014
 * 
 */

#pragma once
#ifndef _ymp_ToString_H
#define _ymp_ToString_H
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//  Dependencies
#include <string>
#include "../Types.h"
namespace ymp{
namespace StringTools{
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
enum NumberFormat{
    NORMAL = 0,
    COMMAS = 1,
    BYTES = 2,
    BYTES_EXPANDED = 3
};
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//  Integer
std::string tostr       (uiL_t x, NumberFormat format = NORMAL);
std::string tostr       (siL_t x, NumberFormat format = NORMAL);
std::string tostrln     (uiL_t x, NumberFormat format = NORMAL);
std::string tostrln     (siL_t x, NumberFormat format = NORMAL);
inline std::string tostrln  (u32_t x, NumberFormat format = NORMAL){ return tostrln((uiL_t)x, format); }
inline std::string tostrln  (s32_t x, NumberFormat format = NORMAL){ return tostrln((siL_t)x, format); }
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//  Float
std::string tostr_float     (double x, int precision = 0);
std::string tostrln_float   (double x, int precision = 0);
std::string tostr_fixed     (double x, int precision = 3);
std::string tostrln_fixed   (double x, int precision = 3);
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//  char <-> wide
std::wstring    a_to_w_direct   (const std::string& str);
std::string     w_to_a_direct   (const std::wstring& str);
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
}
}
#endif
